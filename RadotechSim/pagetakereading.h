#ifndef PAGETAKEREADING_H
#define PAGETAKEREADING_H

#include <QWidget>
#include "page.h"
#include "record.h"

namespace Ui {
class PageTakeReading;
}

/*
 * PageTakeReading Class:
 * - Handles the process of taking new readings from the device.
 * - Allows the user to step through measurement points and saves the collected data.
 */
class PageTakeReading : public Page
{
    Q_OBJECT

public:
    /*
     * Constructor: Initializes the page for taking new readings
     * @param profileIdx: Index of the user profile to store the readings
     * @param mainWindow: Pointer to the MainWindow for accessing shared resources
     * @param parentMenu: Pointer to the parent page for back navigation
     * @param parent: Optional QWidget parent (default nullptr)
     */
    explicit PageTakeReading(int profileIdx, MainWindow *mainWindow, Page *parentMenu, QWidget *parent = nullptr);

    ~PageTakeReading();

    /*
     * deviceSignal:
     * - Handles signals from the device (e.g., status updates or new readings).
     * @param device: Pointer to the RadotechDevice providing the signal
     */
    void deviceSignal(RadotechDevice *device);

private:
    Ui::PageTakeReading *ui;  // Pointer to the UI components generated by Qt Designer

    int profileIdx;           // Index of the user profile to save the new record
    int currentReading = 0;   // Tracks the current reading point being measured

    /*
     * nextStatus:
     * - Updates the UI to reflect the next measurement status.
     * - Moves to the next point for taking readings.
     */
    void nextStatus();

    /*
     * goToResults:
     * - Finalizes the measurement process.
     * - Saves the readings as a new record and navigates to the results page.
     */
    void goToResults();
};

#endif // PAGETAKEREADING_H
